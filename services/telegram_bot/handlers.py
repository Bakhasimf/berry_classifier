import logging
from aiogram import Router, F
from aiogram.types import Message
import requests
from aiogram import Bot
import aiohttp

# === –õ–æ–≥–≥–µ—Ä ===
logger = logging.getLogger("bot.handlers")

# === –†–æ—É—Ç–µ—Ä ===
router = Router()

API_URL = "http://localhost:8000/predict"  # URL FastAPI

@router.message(F.text == "/start")
async def handle_start(message: Message):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —è–≥–æ–¥—ã, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –µ—ë —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å.")

@router.message(F.photo)
async def handle_photo(message: Message, bot: Bot):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    await message.answer("–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é...")

    photo = message.photo[-1]
    file_info = await bot.get_file(photo.file_id)
    file_path = file_info.file_path
    file_url = f"https://api.telegram.org/file/bot{bot.token}/{file_path}"

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(file_url) as resp:
                if resp.status == 200:
                    image_bytes = await resp.read()
                    logger.info(f"–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å Telegram –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")

                    files = {'file': ('image.jpg', image_bytes, 'image/jpeg')}
                    try:
                        response = requests.post(API_URL, files=files)
                        response.encoding = 'utf-8'
                        if response.status_code == 200:
                            print(response.text)
                            data = response.json()
                            name_en = data.get("predicted_name_en", "?")
                            name_ru = data.get("predicted_name_ru", "?")
                            logger.info(f"–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}: {name_ru} / {name_en}")
                            await message.answer(
                                f"–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ:\n"
                                f"üá∑üá∫ <b>{name_ru}</b>\n"
                                f"üá¨üáß <i>{name_en}</i>\n"
                            )
                        else:
                            logger.warning(f"–û—à–∏–±–∫–∞ –æ—Ç API {API_URL}: —Å—Ç–∞—Ç—É—Å {response.status_code}")
                            await message.answer(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
                    except Exception as e:
                        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API: {e}")
                        await message.answer(f"–û—à–∏–±–∫–∞ API:\n<code>{e}</code>")
                else:
                    logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ —Å Telegram. –°—Ç–∞—Ç—É—Å: {resp.status}")
                    await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –æ—Ç Telegram: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")


# from aiogram import Router, F
# from aiogram.types import Message
# import requests
#
# router = Router()
#
# API_URL = "http://localhost:8000/predict"  # URL FastAPI
#
# @router.message(F.text == "/start")
# async def handle_start(message: Message):
#     await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —è–≥–æ–¥—ã, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –µ—ë —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å. üçì")
#
# from aiogram import Bot
# import aiohttp
#
# @router.message(F.photo)
# async def handle_photo(message: Message, bot: Bot):
#     await message.answer("üì• –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –∑–∞–≥—Ä—É–∂–∞—é...")
#
#     photo = message.photo[-1]  # –°–∞–º–æ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
#     file_info = await bot.get_file(photo.file_id)
#     file_path = file_info.file_path
#
#     # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ HTTP
#     file_url = f"https://api.telegram.org/file/bot{bot.token}/{file_path}"
#
#     async with aiohttp.ClientSession() as session:
#         async with session.get(file_url) as resp:
#             if resp.status == 200:
#                 image_bytes = await resp.read()
#
#                 # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ API
#                 files = {'file': ('image.jpg', image_bytes, 'image/jpeg')}
#                 try:
#                     response = requests.post(API_URL, files=files)
#                     if response.status_code == 200:
#                         data = response.json()
#                         name_en, name_ru = data.get("predicted_name", ["?", "?"])
#                         await message.answer(
#                             f"–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ:\n"
#                             f"üá∑üá∫ <b>{name_ru}</b>\n"
#                             f"üá¨üáß <i>{name_en}</i>\n"
#                         )
#                     else:
#                         await message.answer(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
#                 except Exception as e:
#                     await message.answer(f"–û—à–∏–±–∫–∞ API:\n<code>{e}</code>")
#             else:
#                 await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
